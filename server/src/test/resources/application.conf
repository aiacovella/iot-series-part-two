akka {
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-dead-letters = 0
  log-dead-letters-during-shutdown = off

  actor {

    provider = "akka.remote.RemoteActorRefProvider"

    debug {
      lifecycle = off
      unhandled = off
    }
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

}

http {
  interface = "0.0.0.0"
  port = 9000
}

akka.loggers = [akka.testkit.TestEventListener] # makes both log-snooping and logging work
akka.loglevel = "DEBUG"
akka.persistence.journal.plugin = "dummy-journal"
akka.persistence.snapshot-store.plugin = "dummy-snapshot-store"

dummy-journal {
  class = "org.dmonix.akka.persistence.JournalPlugin"
  plugin-dispatcher = "akka.actor.default-dispatcher"
}

dummy-snapshot-store {
  class = "org.dmonix.akka.persistence.SnapshotStorePlugin"
  plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"
}

akka.actor.debug.receive = on

message-broker {

  url = "tcp://127.0.0.1:1883"
  user = ""
  password = ""

  //messages received when disconnected will be stashed. Messages isOverdue after stashTimeToLive will be discard
  stash-time-to-live = 60 seconds

  //stash messages will be drop first haft elems when reach this size
  stash-capacity = 8000,

  //for fine tuning re-connection logic
  reconnect-delay-min = 1 seconds
  reconnect-delay-max = 30 seconds

}


